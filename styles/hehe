@import "syntax-variables";

atom-text-editor, :host {
  // background-image: url('https://raw.githubusercontent.com/evenhold/evenhold.github.io/master/images/4.png');
  background-position: center center;
  background-size: cover;
  border-left:2px solid @dark-blue-evn;
  box-shadow: 2ox 2px 2px @blue-evn,2ox 2px 2px @blue-evn;
  background-color: @black-even;// color bg de editor
  // color: @syntax-text-color; // variables,{}, (), texto
  color:@white-evn;

  .wrap-guide {
    background-color: @black-even;
  }

  .indent-guide {
    color: @dark-blue-evn;
  }

  .invisible-character {
    color: @blue-evn;
  }

  .gutter {
    background-color: @black-even; //bg panel numbers left
    color: @white-evn;//color panel numbers left

    .line-number {
      &.cursor-line {
        background-color: @dark-blue-evn; //bg number left selected
        color: @blue-evn; //color number left selected
      }

      &.cursor-line-no-selection {
        // color: @syntax-gutter-text-color-selected; //color number unselected
        color:@white-evn;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    // color: @syntax-cursor-color;//color cursor
    color:@blue-evn;
    background-color: @blue-evn;
    border: 2px solid @blue-evn;
  }

  .selection .region {
    // background-color: @syntax-selection-color;// color bg selected
    background-color: @dark-blue-evn;
  }
}

atom-text-editor .search-results .marker .region,
:host .search-results .marker .region {
  // background-color: transparent;
  background-color: white;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .marker.current-result .region,
:host .search-results .marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

.comment {
  color:@light-grey-evn;// color comentarios
}

.keyword {
  // color: @purple;// <reference path=''/> , static, import, from, require --- en typecript, @, !important -- en css
  color:@red-evn;
  text-decoration: none;
  text-shadow: 0px 0px 3px @red-evn,
               0px 0px 3px @red-evn;

  &.control {
    // color: @purple;// switch, break, case, throw, if, else, while, for ..
    color:@blue-evn;
    text-shadow: 0px 0px 3px @blue-evn,
                 0px 0px 3px @blue-evn;
  }

  &.operator {
    // color: @syntax-text-color;// operadores logicos , ":"
    color:@white-evn;
  }

  &.other.special-method {
    color: @red-evn;
    font-weight: bold;
  }

  &.other.unit {
    // color: @blue;// "px" en css
    color:white;
  }
}

.storage {
  // color: @purple;// function, var, port, metodos reservados.
  color:@red-evn;
  font-weight: bold;
  // text-shadow: 0px 0px 3px @red-evn,
  //              0px 0px 3px @red-evn;
}

.constant {
  // color: @orange; //true, false,  property (status)
  color:@purple-evn;
  font-weight: bold;

  &.character.escape {
    color: @green-evn;
  }

  &.numeric {
    // color: @orange; // number, pixel
    color:white;
  }

  &.other.color {
    // color: @cyan; // number hexadecimal
    color:white;
  }

  &.other.symbol {
    color: @green;
  }
}

.variable {
  // color: @red;// objects. . .
  color:white;

  &.interpolation {
    color: darken(@red, 10%);
  }

  &.parameter.function {
    // color: @syntax-text-color; //parameters in functions
    color: white;
  }
}

.invalid.illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.string {
  // color: @green;// cadenas, " content ", json, rel=, src=,
  color:@dark2-blue-evn;


  &.regexp {
    color: @cyan;

    .source.ruby.embedded {
      color: @orange;
    }
  }

  &.other.link {
    color: @red;
  }
}

.punctuation {
  &.definition {
    &.comment {
      // color: @light-gray; // simbolos de comentarios <!-->, //, /**/,
      color:@light-grey-evn;
    }

    &.string,
    &.variable,
    &.parameters,
    &.array {
      // color: @syntax-text-color; // (), "", '', ~
      color:@dark2-blue-evn;
      text-shadow: 0px 0px 2px @blue-evn,0px 0px 2px @blue-evn;
    }

    &.heading,
    &.identity {
      color: @blue;
    }

    &.bold {
      color: green;
      font-weight: bold;
    }

    &.italic {
      color: @purple;
      font-style: italic;
    }
  }

  &.section.embedded {
    color: darken(@red, 10%);
  }

}

.support {
  &.class {
    color: white;// $scope y angular.moks en angularJS
  }

  &.function  {
    // color: @cyan;// require,methods,
    color: @dark2-blue-evn;// require,methods,

    &.any-method {
      color: @blue;

    }
  }
}

.entity {
  &.name.function {
    // color: @blue;// get,post,put, nameFunction(),
    color:@blue-evn;
    text-shadow: 0px 0px 2px @blue-evn,
                 0px 0px 2px @blue-evn;
  }
  &.name.type {
    // color: blue;// console, "new" -> Error, Schema , Objects, ...
    color:@red-evn;
    text-decoration: none;
  }

  &.other.inherited-class {
    color: @green;
  }
  &.name.class, &.name.type.class {
    // color: blue;// nombre de las clases en typescript
    color:@blue-evn;
    text-shadow: 0px 0px 3px @blue-evn,
                  0px 0px 3px @blue-evn;
  }

  &.name.section {
    color: @blue;
  }

  &.name.tag {
    // color: @red;// tags en html y css >>> div, html, h1, body, script, link ....
    color:@red-evn;
    text-decoration: none;
  }

  &.other.attribute-name {
    // color: @orange;// clases, id y attribute-name en html y css
    color:@blue-evn;

    &.id {
      // color: @blue; // color de id en stylus
      color:@blue-evn;
    }
  }
}

.meta {
  &.class {
    color: @blue-evn; // nombre de las clases en jade
  }

  &.link {
    color: @orange;
  }

  &.require {
    color: @blue;
  }

  &.selector {
    color: @purple;
  }

  &.separator {
    background-color: @gray;
    color: @syntax-text-color;
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    color: @orange;
    font-weight: bold;
  }

  &.changed {
    color: @purple;
  }

  &.deleted {
    color: @red;
  }

  &.italic {
    color: @purple;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @blue;
  }

  &.inserted {
    color: @green;
  }

  &.list {
    color: @red;
  }

  &.quote {
    color: @orange;
  }

  &.raw.inline {
    color: @green;
  }
}

.source.gfm .markup {
  -webkit-font-smoothing: auto;
  &.heading {
    color: @green;
  }
}

atom-text-editor[mini] .scroll-view,
:host([mini]) .scroll-view {
  padding-left: 1px;
}
